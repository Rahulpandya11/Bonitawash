{"ast":null,"code":"import{BOOKING_FORM_URL,SERVICES,BUSINESS_HOURS,FORM_FIELDS}from'../../constants/booking';// Function to open booking form with pre-filled service\nexport const openBookingForm=function(){let serviceName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';// Get service details\nconst service=Object.values(SERVICES).find(s=>s.name===serviceName);// Construct form URL with parameters\nlet formUrl=BOOKING_FORM_URL;if(service){// Add service parameters to URL\nconst params=new URLSearchParams();params.append('usp','pp_url');params.append(FORM_FIELDS.PACKAGE,service.name);formUrl+=`?${params.toString()}`;}// Open form in new tab\nwindow.open(formUrl,'_blank');};// Function to validate booking time\nexport const isValidBookingTime=(date,time)=>{const dateObj=new Date(date+'T'+time);const day=dateObj.getDay();const hours=dateObj.getHours();const minutes=dateObj.getMinutes();// Check if it's a weekend\nconst isWeekend=day===0||day===6;// Get business hours\nconst businessHours=isWeekend?BUSINESS_HOURS.weekends:BUSINESS_HOURS.weekdays;// Convert business hours to minutes for comparison\nconst[startHour,startMinute]=businessHours.start.split(':').map(Number);const[endHour,endMinute]=businessHours.end.split(':').map(Number);const bookingTimeInMinutes=hours*60+minutes;const startTimeInMinutes=startHour*60+startMinute;const endTimeInMinutes=endHour*60+endMinute;return bookingTimeInMinutes>=startTimeInMinutes&&bookingTimeInMinutes<=endTimeInMinutes;};// Function to format date for display\nexport const formatBookingDate=date=>{return new Date(date).toLocaleDateString('en-US',{weekday:'long',year:'numeric',month:'long',day:'numeric'});};// Function to format time for display\nexport const formatBookingTime=time=>{return new Date(`2000-01-01T${time}`).toLocaleTimeString('en-US',{hour:'numeric',minute:'2-digit',hour12:true});};","map":{"version":3,"names":["BOOKING_FORM_URL","SERVICES","BUSINESS_HOURS","FORM_FIELDS","openBookingForm","serviceName","arguments","length","undefined","service","Object","values","find","s","name","formUrl","params","URLSearchParams","append","PACKAGE","toString","window","open","isValidBookingTime","date","time","dateObj","Date","day","getDay","hours","getHours","minutes","getMinutes","isWeekend","businessHours","weekends","weekdays","startHour","startMinute","start","split","map","Number","endHour","endMinute","end","bookingTimeInMinutes","startTimeInMinutes","endTimeInMinutes","formatBookingDate","toLocaleDateString","weekday","year","month","formatBookingTime","toLocaleTimeString","hour","minute","hour12"],"sources":["C:/Users/ASUS/Downloads/carwash/carwash/carwash-react/src/components/utils/booking.js"],"sourcesContent":["import { BOOKING_FORM_URL, SERVICES, BUSINESS_HOURS, FORM_FIELDS } from '../../constants/booking';\r\n\r\n// Function to open booking form with pre-filled service\r\nexport const openBookingForm = (serviceName = '') => {\r\n    // Get service details\r\n    const service = Object.values(SERVICES).find(s => s.name === serviceName);\r\n    \r\n    // Construct form URL with parameters\r\n    let formUrl = BOOKING_FORM_URL;\r\n    \r\n    if (service) {\r\n        // Add service parameters to URL\r\n        const params = new URLSearchParams();\r\n        params.append('usp', 'pp_url');\r\n        params.append(FORM_FIELDS.PACKAGE, service.name);\r\n        formUrl += `?${params.toString()}`;\r\n    }\r\n    \r\n    // Open form in new tab\r\n    window.open(formUrl, '_blank');\r\n};\r\n\r\n// Function to validate booking time\r\nexport const isValidBookingTime = (date, time) => {\r\n    const dateObj = new Date(date + 'T' + time);\r\n    const day = dateObj.getDay();\r\n    const hours = dateObj.getHours();\r\n    const minutes = dateObj.getMinutes();\r\n    \r\n    // Check if it's a weekend\r\n    const isWeekend = day === 0 || day === 6;\r\n    \r\n    // Get business hours\r\n    const businessHours = isWeekend ? BUSINESS_HOURS.weekends : BUSINESS_HOURS.weekdays;\r\n    \r\n    // Convert business hours to minutes for comparison\r\n    const [startHour, startMinute] = businessHours.start.split(':').map(Number);\r\n    const [endHour, endMinute] = businessHours.end.split(':').map(Number);\r\n    \r\n    const bookingTimeInMinutes = hours * 60 + minutes;\r\n    const startTimeInMinutes = startHour * 60 + startMinute;\r\n    const endTimeInMinutes = endHour * 60 + endMinute;\r\n    \r\n    return bookingTimeInMinutes >= startTimeInMinutes && \r\n           bookingTimeInMinutes <= endTimeInMinutes;\r\n};\r\n\r\n// Function to format date for display\r\nexport const formatBookingDate = (date) => {\r\n    return new Date(date).toLocaleDateString('en-US', {\r\n        weekday: 'long',\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    });\r\n};\r\n\r\n// Function to format time for display\r\nexport const formatBookingTime = (time) => {\r\n    return new Date(`2000-01-01T${time}`).toLocaleTimeString('en-US', {\r\n        hour: 'numeric',\r\n        minute: '2-digit',\r\n        hour12: true\r\n    });\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}